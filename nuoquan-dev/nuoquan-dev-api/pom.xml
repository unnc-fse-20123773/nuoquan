<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.nuoquan</groupId>
		<artifactId>nuoquan-dev</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>
	<artifactId>nuoquan-dev-api</artifactId>

	<!-- 打包成war包 -->
	<packaging>war</packaging>

	<dependencies>
		<dependency>
			<groupId>com.nuoquan</groupId>
			<artifactId>nuoquan-dev-service</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>

		<!-- <dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<optional>true</optional>
		</dependency> -->
		
		
		<!-- SpringBoot 测试 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope> <!-- scope为test时，有效范围为本层测试包 -->
			<exclusions>
				<exclusion>
					<!-- 排除 Springboot 默认的 logback 日志框架 -->
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- 添加 servlet，为了打包成 war 包 -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<scope>provided</scope>
		</dependency>
	</dependencies>
	
	<build>
		<plugins>
			<!-- codecov 测试覆盖率 -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
				<version>2.7</version>
				<configuration>
					<formats>
						<format>html</format>
						<format>xml</format>
					</formats>
					<check />
				</configuration>
			</plugin>
			
			<!--maven打包时跳过单元测试 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <!-- <skip>true</skip> --> <!-- maven打包时跳过单元测试。。打包时不会把Test类及@Test修饰的方法执行一遍 -->
 
                    <!--只是忽略编译单元测试类的错误。打包时也会把Test类及@Test修饰的方法执行一遍-->
                    <testFailureIgnore>true</testFailureIgnore>
                </configuration>
            </plugin>
		</plugins>
	</build>
</project>