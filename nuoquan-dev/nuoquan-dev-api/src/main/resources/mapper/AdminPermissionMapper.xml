<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.nuoquan.mapper.AdminPermissionMapper" >
  <resultMap id="BaseResultMap" type="com.nuoquan.pojo.AdminPermission" >
    <!--
      WARNING - @mbg.generated
    -->
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="descripion" property="descripion" jdbcType="VARCHAR" />
    <result column="url" property="url" jdbcType="VARCHAR" />
    <result column="is_blank" property="isBlank" jdbcType="INTEGER" />
    <result column="pid" property="pid" jdbcType="VARCHAR" />
    <result column="perms" property="perms" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="icon" property="icon" jdbcType="VARCHAR" />
    <result column="order_num" property="orderNum" jdbcType="INTEGER" />
    <result column="visible" property="visible" jdbcType="INTEGER" />
    
    <result column="child_count" property="childCount" jdbcType="INTEGER" />
  </resultMap>
  
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  
  <sql id="Base_Column_List">
    id, name, descripion, url, is_blank, pid, perms, type, icon, order_num, visible, (select count(1) from admin_permission where pid=a.id) child_count
  </sql>
  
  <select id="findByAdminUserId" parameterType="String" resultMap="BaseResultMap">
        select distinct p.*,(select count(1) from admin_permission where pid=p.id) child_count
        from admin_role_permission arp,admin_user_role aur,admin_permission p
        where arp.role_id = aur.role_id AND arp.permission_id = p.id AND aur.admin_user_id=#{userId} 
		GROUP BY p.id
		ORDER BY order_num is null ASC,order_num  ASC
  </select>
 
  <select id="queryPermissionByRoleId"  parameterType="String" resultMap="BaseResultMap">
	 	select p.* from admin_permission p
		left join admin_role_permission rp on p.id=rp.permission_id
		where rp.role_id=#{roleId}
  </select>
  
  <select id="selectByExample" parameterType="Object" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from admin_permission a
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from admin_permission a
    where id = #{id,jdbcType=VARCHAR}
  </select>
  
  <update id="updateByPrimaryKey" parameterType="com.nuoquan.pojo.AdminPermission">
    update admin_permission
    set name = #{name,jdbcType=VARCHAR},
      descripion = #{descripion,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      is_blank = #{isBlank,jdbcType=INTEGER},
      pid = #{pid,jdbcType=VARCHAR},
      perms = #{perms,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      icon = #{icon,jdbcType=VARCHAR},
      order_num = #{orderNum,jdbcType=INTEGER},
      visible = #{visible,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>